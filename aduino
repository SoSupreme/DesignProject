#include <Debug.h>
#include <JSN270.h>
#include <Arduino.h>
#include <SoftwareSerial.h>         // 라이브러리 선언

////////////////////////// 통신에 필요한 변수들 /////////////////////////

#define SSID      "AndroidHotspot9781"    // your wifi network SSID
#define KEY       "12345678"    // your wifi network password
#define AUTH       "WPA2"     // your wifi network security (NONE, WEP, WPA, WPA2)

#define USE_DHCP_IP 1

#if !USE_DHCP_IP
#define MY_IP          "192.168.1.133"
#define SUBNET         "255.255.255.0"
#define GATEWAY        "192.168.1.254"
#endif

#define HOST_IP        "192.168.43.240" // 맥북ip 주소
#define REMOTE_PORT    8008

#define PROTOCOL       "TCP"

SoftwareSerial mySerial(3, 2); // RX, TX
 
JSN270 JSN270(&mySerial);

//////////////////////////운전에 필요한 변수들 /////////////////////////

#define EA 5  // 모터드라이버 EA 핀, 아두이노 디지털 5번 핀에 연결
#define M_IN1 4  // 모터드라이버 IN1 핀, 아두이노 디지털 4번 핀에 연결
#define M_IN2 3  // 모터드라이버 IN2 핀, 아두이노 디지털 3번 핀에 연결
#define EB 10
#define M_IN3 8
#define M_IN4 7
#define VOLTS_PER_UNIT    .0049F        // (.0049 for 10 bit A-D)

char Sensor0 = A0, Sensor1 = A1, Sensor2 = A2; //A0, A1, A2에 센서연결
int Sensor_val0, Sensor_val1, Sensor_val2;        //센서 ADC값 저장 변수
byte i;
float volts0, volts1, volts2;
float inches0, inches1,inches2;
float cm0, cm1, cm2;
int cm2_0;

//////////////////////////메인 함수 = setup() /////////////////////////

void setup() {

  // 통신에 필요한 변수 
  char c;
  String hostname;
  char hostip[32];

// 도착지점 
  char dest ;
  
   // 통신 시작
  mySerial.begin(9600);
  Serial.begin(9600);

  Serial.println("--------- JSN270 Web Client Test --------");

  // wait for initilization of JSN270
  delay(5000);
  //JSN270.reset();
  delay(1000);

#if USE_DHCP_IP
  JSN270.dynamicIP();
#else
  JSN270.staticIP(MY_IP, SUBNET, GATEWAY);
#endif    
    
  if (JSN270.join(SSID, KEY, AUTH)) {
    Serial.println("WiFi connect to " SSID);
  }
  else {
    Serial.println("Failed WiFi connect to " SSID);
    Serial.println("Restart System");

    return;
  }
  delay(1000);

  Serial.print("Host IP is ");
  Serial.println(hostname);
  hostname.toCharArray(hostip, hostname.length()+1);  // convert string to char array

  if (!JSN270.client(HOST_IP, REMOTE_PORT, PROTOCOL)) {
    Serial.print("Failed connect to ");
    Serial.println(HOST_IP);
    Serial.println("Restart System");
  } else {
    Serial.print("Socket connect to ");
    Serial.println(HOST_IP);
    //delay(2000);
    
    // Enter data mode
    JSN270.sendCommand("at+exit\r");
    delay(100);

    Serial.println("connected to server");
    // Make a HTTP request:

    if(JSN270.available()) {
     // Serial.print((char)JSN270.read());
      delay(500);


  
  while(1){
     dest = (char)JSN270.read();

    if(dest >='a' && dest <='z'){
     Serial.print("loop:");
      Serial.println(dest);

        break;
       }
    }
      Serial.print("data :");
      Serial.println(dest);
      if(dest == 'a'){
        Serial.print("Received Data : ");
        Serial.println(dest);
      }
      else if(dest == 'b'){
         Serial.print("Received Data : b");
         Serial.println(dest);

      }

      else{
           Serial.println("Received Data : weird");
      }
   }
  }
  // 통신 끝


  // 운전에 필요한 변수
  pinMode(EA, OUTPUT);  // EA 핀 연결된 핀 출력 설정
  pinMode(M_IN1, OUTPUT);  // IN1 핀 출력 설정
  pinMode(M_IN2, OUTPUT);  // IN2 핀 출력 설정
  pinMode(EB, OUTPUT); 
  pinMode(M_IN3, OUTPUT);  
  pinMode(M_IN4, OUTPUT); 
  
  int flag = 0;
//  char dest = 'b';

  /////////////////////////////// 운전 시작///////////////////////////////////////////

 Serial.print("Let's go to  : ");
 Serial.println(dest);
  
sensor_in();
  delay(1000);
  while(cm1 >= 19) {
    sensor_in();
    forward(100,100);
  }
  stopmotor(0,0);
  delay(1000);
  left(200,200);
  delay(550);

  forward(100,100);
  delay(1000);
  
  sensor_in();
  delay(1000);
  while(cm1 >= 60) {
    sensor_in();
    forward(100,100);

  }
  stopmotor(0,0);
  delay(1000);
  left(200,200);
  delay(550);
  stopmotor(0,0);

  delay(1000);
  
  sensor_in();
  while(cm2-cm0 > 1){
    check_status();
  }


if( dest == 'a'){ go1();

//오른쪽 빈자리 확인
  delay(1000);
  right(200, 200);
  delay(700);
  stopmotor(0,0);
  delay(500);
  sensor_in();
  //180도 회전
  if(cm1<25){
    left(200, 200);
    delay(1100);
    stopmotor(0,0);
  }
  else{
    while(cm1 >= 18) {
    sensor_in();
    forward(100,100);
  }  
  stopmotor(0,0);
  delay(1000);
  flag = 1;
  }
} 
//왼쪽 빈자리 확인
if((flag == 0)&&(dest=='a')){
  delay(500);
  sensor_in();
    while(cm1 >= 18) {
    sensor_in();
    forward(100,100);
  }  
  stopmotor(0,0);
  delay(1000);
  flag = 1;
  }
  
if( dest == 'b') go2();
if((flag == 0)&&(dest=='b')){
//오른쪽 빈자리 확인
  delay(1000);
  right(200, 200);
  delay(700);
  stopmotor(0,0);
  delay(500);
  sensor_in();
  //180도 회전
  if(cm1<25){
    left(200, 200);
    delay(1100);
    stopmotor(0,0);
  }else{
    while(cm1 >= 18) {
    sensor_in();
    forward(100,100);
  }  
  stopmotor(0,0);
  delay(1000);
  flag = 1;
  }
}
//왼쪽 빈자리 확인
if((flag == 0)&&(dest=='b')){
  delay(500);
  sensor_in();
    while(cm1 >= 18) {
    sensor_in();
    forward(100,100);
  }  
  stopmotor(0,0);
  delay(1000);
  flag = 1;
  }
  
  /////////////////////////////// 운전 끝///////////////////////////////////////////
}

////////////////////////////// 메인 함수 종료 ////////////////////////////////////

void loop(){
  
}

///////////////////// 여기서 부터 끝까지 운전 제어 함수 ////////////////

void go1(){
  sensor_in();
  while(cm1 >= 63) {
    sensor_in();
    forward(100,100);
  }
  stopmotor(0,0);
  
  
}

void go2(){
  sensor_in();
  while(cm1 >= 35) {
    sensor_in();
    forward(100,100);
  }
  forward(100,100);
  delay(200);
  stopmotor(0,0);
}
void go_left(){
  digitalWrite(M_IN1, 0);  // IN1 핀에 HIGH 출력
  digitalWrite(M_IN2, 1);  // IN2 핀에 LOW 출력
  digitalWrite(M_IN3, 0);  // 
  digitalWrite(M_IN4, 1);  //
  
  analogWrite(EB, 350);
  analogWrite(EA, 50);  // EA 핀에 PWM신호 출력

}
void go_right(){
  digitalWrite(M_IN1, 0);  // IN1 핀에 HIGH 출력
  digitalWrite(M_IN2, 1);  // IN2 핀에 LOW 출력
  digitalWrite(M_IN3, 0);  // 
  digitalWrite(M_IN4, 1);  //
  
  analogWrite(EB, 50);
  analogWrite(EA, 350);  // EA 핀에 PWM신호 출력

}

//전면 센서 3개 값 받아오는 함수
void sensor_in(){
  
  Sensor_val0 = analogRead(Sensor0);  // 센서저장변수에 아날로그값을 저장
  volts0 = (float)Sensor_val0 * VOLTS_PER_UNIT; // 아날로그값을 volt 단위로 변환
  inches0 = 23.897 * pow(volts0,-1.1907); // 측정전압에 따른 inch단위 거리 계산
  cm0 = 60.495 * pow(volts0,-1.1904);     // 측정전압에 따른 cm단위 거리 계산

  Sensor_val1 = analogRead(Sensor1);  // 센서저장변수에 아날로그값을 저장
  volts1 = (float)Sensor_val1 * VOLTS_PER_UNIT; // 아날로그값을 volt 단위로 변환
  inches1 = 23.897 * pow(volts1,-1.1907); // 측정전압에 따른 inch단위 거리 계산
  cm1 = 60.495 * pow(volts1,-1.1904);     // 측정전압에 따른 cm단위 거리 계산

  Sensor_val2 = analogRead(Sensor2);  // 센서저장변수에 아날로그값을 저장
  volts2 = (float)Sensor_val2 * VOLTS_PER_UNIT; // 아날로그값을 volt 단위로 변환
  inches2 = 23.897 * pow(volts2,-1.1907); // 측정전압에 따른 inch단위 거리 계산
  cm2 = 60.495 * pow(volts2,-1.1904);     // 측정전압에 따른 cm단위 거리 계산
  
}

void check_status(){
  sensor_in();
  if((cm0 - cm2) > 1) {
    left(200, 200);
    delay(70);
    stopmotor(0,0);
    delay(100);
  }
  sensor_in();
  if((cm2 - cm0) > 1) {
    right(200, 200);
    delay(70);
    stopmotor(0,0);
    delay(100);
  }
  
}

/////////////////////////////////////////////////
// 직진, 우회전, 좌회전 모터 제어 ///
/////////////////////////////////////////////////
void forward(int status1, int status2)  // 직진
{
  digitalWrite(M_IN1, 1);  // IN1 핀에 HIGH 출력
  digitalWrite(M_IN2, 0);  // IN2 핀에 LOW 출력
  digitalWrite(M_IN3, 1);  // 
  digitalWrite(M_IN4, 0);  //
  
  analogWrite(EB, status1);
  analogWrite(EA, status2);  // EA 핀에 PWM신호 출력
  
}
void backward(int status1, int status2)  // 직진
{
  digitalWrite(M_IN1, 0);  // IN1 핀에 HIGH 출력
  digitalWrite(M_IN2, 1);  // IN2 핀에 LOW 출력
  digitalWrite(M_IN3, 0);  // 
  digitalWrite(M_IN4, 1);  //
  
  analogWrite(EB, status1);
  analogWrite(EA, status2);  // EA 핀에 PWM신호 출력
  
}
void left(int status1, int status2)  // 우회전
{
  digitalWrite(M_IN1, 1);  // IN1 핀에 HIGH 출력
  digitalWrite(M_IN2, 0);  // IN2 핀에 LOW 출력
  digitalWrite(M_IN3, 0);  // 
  digitalWrite(M_IN4, 1);  //
  
  analogWrite(EB, status1);
  analogWrite(EA, status2);  // EA 핀에 PWM신호 출력
}
void right(int status1, int status2)  // 우회전
{
  digitalWrite(M_IN1, 0);  // IN1 핀에 HIGH 출력
  digitalWrite(M_IN2, 1);  // IN2 핀에 LOW 출력
  digitalWrite(M_IN3, 1);  // 
  digitalWrite(M_IN4, 0);  //
  
  analogWrite(EB, status1);
  analogWrite(EA, status2);  // EA 핀에 PWM신호 출력
}
void stopmotor(int status1, int status2)  // 정지
{
  digitalWrite(M_IN1, 0);  // IN1 핀에 HIGH 출력
  digitalWrite(M_IN2, 0);  // IN2 핀에 LOW 출력
  digitalWrite(M_IN3, 0);  // 
  digitalWrite(M_IN4, 0);  //
  
  analogWrite(EB, status1);
  analogWrite(EA, status2);  // EA 핀에 PWM신호 출력
} 
